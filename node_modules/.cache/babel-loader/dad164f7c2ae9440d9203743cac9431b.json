{"ast":null,"code":"export var getNodesInShortestPathOrder=function getNodesInShortestPathOrder(endNode){var nodesInShortestPathOrder=[];var currentNode=endNode;while(currentNode){nodesInShortestPathOrder.unshift(currentNode);currentNode=currentNode.previousNode;}return nodesInShortestPathOrder;};export var getUnvisitedNeighbors=function getUnvisitedNeighbors(node,grid){var neighbors=[];var row=node.row,col=node.col;if(col>0&&!grid[row][col-1].isWall)neighbors.push(grid[row][col-1]);if(row<grid.length-1&&!grid[row+1][col].isWall)neighbors.push(grid[row+1][col]);if(col<grid[0].length-1&&!grid[row][col+1].isWall)neighbors.push(grid[row][col+1]);if(row>0&&!grid[row-1][col].isWall)neighbors.push(grid[row-1][col]);return neighbors.filter(function(neighbor){return!neighbor.isVisited;});};","map":{"version":3,"sources":["/Users/uchennaibe/Desktop/algorithm-visualizer/src/path-finder/pathFinder-algos/util_functions.js"],"names":["getNodesInShortestPathOrder","endNode","nodesInShortestPathOrder","currentNode","unshift","previousNode","getUnvisitedNeighbors","node","grid","neighbors","row","col","isWall","push","length","filter","neighbor","isVisited"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,2BAA2B,CAAG,QAA9BA,CAAAA,2BAA8B,CAACC,OAAD,CAAa,CACpD,GAAIC,CAAAA,wBAAwB,CAAG,EAA/B,CACA,GAAIC,CAAAA,WAAW,CAAGF,OAAlB,CACA,MAAOE,WAAP,CAAoB,CAChBD,wBAAwB,CAACE,OAAzB,CAAiCD,WAAjC,EACAA,WAAW,CAAGA,WAAW,CAACE,YAA1B,CACH,CACD,MAAOH,CAAAA,wBAAP,CACH,CARM,CASP,MAAO,IAAMI,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,IAAD,CAAOC,IAAP,CAAgB,CACjD,GAAMC,CAAAA,SAAS,CAAG,EAAlB,CACA,GAAQC,CAAAA,GAAR,CAAqBH,IAArB,CAAQG,GAAR,CAAaC,GAAb,CAAqBJ,IAArB,CAAaI,GAAb,CACA,GAAIA,GAAG,CAAG,CAAN,EAAW,CAACH,IAAI,CAACE,GAAD,CAAJ,CAAUC,GAAG,CAAG,CAAhB,EAAmBC,MAAnC,CAA2CH,SAAS,CAACI,IAAV,CAAeL,IAAI,CAACE,GAAD,CAAJ,CAAUC,GAAG,CAAG,CAAhB,CAAf,EAC3C,GAAID,GAAG,CAAGF,IAAI,CAACM,MAAL,CAAc,CAApB,EAAyB,CAACN,IAAI,CAACE,GAAG,CAAG,CAAP,CAAJ,CAAcC,GAAd,EAAmBC,MAAjD,CAAyDH,SAAS,CAACI,IAAV,CAAeL,IAAI,CAACE,GAAG,CAAG,CAAP,CAAJ,CAAcC,GAAd,CAAf,EACzD,GAAIA,GAAG,CAAGH,IAAI,CAAC,CAAD,CAAJ,CAAQM,MAAR,CAAiB,CAAvB,EAA4B,CAACN,IAAI,CAACE,GAAD,CAAJ,CAAUC,GAAG,CAAG,CAAhB,EAAmBC,MAApD,CAA4DH,SAAS,CAACI,IAAV,CAAeL,IAAI,CAACE,GAAD,CAAJ,CAAUC,GAAG,CAAG,CAAhB,CAAf,EAC5D,GAAID,GAAG,CAAG,CAAN,EAAW,CAACF,IAAI,CAACE,GAAG,CAAG,CAAP,CAAJ,CAAcC,GAAd,EAAmBC,MAAnC,CAA2CH,SAAS,CAACI,IAAV,CAAeL,IAAI,CAACE,GAAG,CAAG,CAAP,CAAJ,CAAcC,GAAd,CAAf,EAC3C,MAAOF,CAAAA,SAAS,CAACM,MAAV,CAAiB,SAAAC,QAAQ,QAAI,CAACA,QAAQ,CAACC,SAAd,EAAzB,CAAP,CACH,CARM","sourcesContent":["export const getNodesInShortestPathOrder = (endNode) => {\n    let nodesInShortestPathOrder = []\n    let currentNode = endNode\n    while (currentNode) {\n        nodesInShortestPathOrder.unshift(currentNode)\n        currentNode = currentNode.previousNode\n    }\n    return nodesInShortestPathOrder\n}\nexport const getUnvisitedNeighbors = (node, grid) => {\n    const neighbors = []\n    const { row, col } = node\n    if (col > 0 && !grid[row][col - 1].isWall) neighbors.push(grid[row][col - 1])\n    if (row < grid.length - 1 && !grid[row + 1][col].isWall) neighbors.push(grid[row + 1][col])\n    if (col < grid[0].length - 1 && !grid[row][col + 1].isWall) neighbors.push(grid[row][col + 1])\n    if (row > 0 && !grid[row - 1][col].isWall) neighbors.push(grid[row - 1][col])\n    return neighbors.filter(neighbor => !neighbor.isVisited)\n}\n"]},"metadata":{},"sourceType":"module"}