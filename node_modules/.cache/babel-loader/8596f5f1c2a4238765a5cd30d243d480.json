{"ast":null,"code":"var _jsxFileName = \"/Users/uchennaibe/Desktop/algorithm-visualizer/src/reports_list/ReportsList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { db } from '../firebase/firebase';\nimport './reportsList.css';\n\nconst ReportsList = () => {\n  const [feedbacks, setFeedbacks] = useState([]);\n  useEffect(() => {\n    db.collection('feedbacks').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setFeedbacks(snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      })));\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reportedList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, feedbacks.map(_ref => {\n    let {\n      id,\n      data: {\n        name,\n        about,\n        timestamp\n      }\n    } = _ref;\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"feedbackCard\",\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      className: \"feedbackCard__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }, name ? name : \"Anonymous\", ' ', /*#__PURE__*/React.createElement(\"small\", {\n      className: \"ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }\n    }, new Date(timestamp === null || timestamp === void 0 ? void 0 : timestamp.toDate()).toDateString())), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"feedback__body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, about));\n  }));\n};\n\nexport default ReportsList;","map":{"version":3,"sources":["/Users/uchennaibe/Desktop/algorithm-visualizer/src/reports_list/ReportsList.js"],"names":["React","useEffect","useState","Card","db","ReportsList","feedbacks","setFeedbacks","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","name","about","timestamp","Date","toDate","toDateString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,EAAT,QAAmB,sBAAnB;AACA,OAAO,mBAAP;;AAIA,MAAMC,WAAW,GAAG,MAAM;AAEtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,EAAE,CAACI,UAAH,CAAc,WAAd,EAA2BC,OAA3B,CAAmC,WAAnC,EAAgD,MAAhD,EACKC,UADL,CACgBC,QAAQ,IAAI;AACpBJ,MAAAA,YAAY,CAACI,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,GAAG,KAC7B;AACGC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADX;AAEGC,QAAAA,IAAI,EAAEF,GAAG,CAACE,IAAJ;AAFT,OAD6B,CAArB,CAAD,CAAZ;AAMH,KARL;AASH,GAVQ,EAUN,EAVM,CAAT;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQV,SAAS,CAACO,GAAV,CAAc;AAAA,QAAC;AAAEE,MAAAA,EAAF;AAAMC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA;AAAf;AAAZ,KAAD;AAAA,wBACV,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,GAAG,EAAEJ,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,SAAS,EAAC,sBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+CE,IAAI,GAAGA,IAAH,GAAU,WAA7D,EAA0E,GAA1E,eACI;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,IAAIG,IAAJ,CAASD,SAAT,aAASA,SAAT,uBAASA,SAAS,CAAEE,MAAX,EAAT,EAA8BC,YAA9B,EAAzB,CADJ,CADJ,eAGI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,KADL,CAHJ,CADU;AAAA,GAAd,CAFR,CADJ;AAeH,CA/BD;;AAiCA,eAAeb,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { db } from '../firebase/firebase';\nimport './reportsList.css'\n\n\n\nconst ReportsList = () => {\n\n    const [feedbacks, setFeedbacks] = useState([])\n    useEffect(() => {\n        db.collection('feedbacks').orderBy('timestamp', 'desc')\n            .onSnapshot(snapshot => {\n                setFeedbacks(snapshot.docs.map(doc =>\n                    ({\n                        id: doc.id,\n                        data: doc.data()\n                    })\n                ))\n            })\n    }, [])\n\n\n    return (\n        <div className=\"reportedList\">\n            {\n                feedbacks.map(({ id, data: { name, about, timestamp } }) =>\n                    <Card className=\"feedbackCard\" key={id}>\n                        <Card.Header className=\"feedbackCard__header\">{name ? name : \"Anonymous\"}{' '}\n                            <small className=\"ml-2\">{new Date(timestamp?.toDate()).toDateString()}</small></Card.Header>\n                        <Card.Body className=\"feedback__body\">\n                            {about}\n                        </Card.Body>\n                    </Card>\n                )\n            }\n        </div>\n    )\n};\n\nexport default ReportsList;"]},"metadata":{},"sourceType":"module"}