{"ast":null,"code":"import _slicedToArray from\"/Users/uchennaibe/Desktop/algorithm-visualizer/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{motion}from'framer-motion';import'./sorting.css';import{mergeSort_util}from'./sorting-algos/merge_sort';import{bubbleSort_util}from'./sorting-algos/bubble_sort';import{quickSort_util}from'./sorting-algos/quickSort';import{insertionSort_util}from'./sorting-algos/insertionSort';import useWindowSize from'../hooks/windowResize';import{toast}from'react-toastify';import{variants}from'../framer motion/variants';// Change this value for the speed of the animations.\n// const ANIMATION_SPEED_MS = 100;\n// This is the main color of the array bars.\nvar PRIMARY_COLOR='yellow';// This is the color of array bars that are being compared throughout the animations.\nvar SECONDARY_COLOR='green';toast.configure();var Sorting=function Sorting(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),array=_useState2[0],setArray=_useState2[1];var _useState3=useState(30),_useState4=_slicedToArray(_useState3,2),arraySize=_useState4[0],setArraySize=_useState4[1];//const [active, setActive] = useState('');\nvar _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),maxSize=_useState6[0],setMaxSize=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),notified=_useState8[0],setNotified=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,1),currentSort=_useState10[0];var _useState11=useState(100),_useState12=_slicedToArray(_useState11,1),animationSpeed=_useState12[0];var timer;useEffect(function(){if(window.innerWidth<500&&!notified){toast.warn('Seems like you are using this app in mobile :( Open this app in large screen to get the best experience :)',{autoClose:false});setNotified(true);}resetArray(arraySize);},[arraySize,maxSize,notified]);var _useWindowSize=useWindowSize(),_useWindowSize2=_slicedToArray(_useWindowSize,1),width=_useWindowSize2[0];if(width<500&&maxSize!==35){setArraySize(20);setMaxSize(35);}else if(width>=500&&width<=1024&&maxSize!==50){setArraySize(30);setMaxSize(50);}else if(width>1024&&maxSize!==70){setArraySize(50);setMaxSize(70);}var resetArray=function resetArray(arraySize){//?\nwhile(timer--){window.clearTimeout(timer);// will do nothing if no timeout with id is present\n}clearTimeout(timer);var arrayBars=document.getElementsByClassName('array-bar');for(var i=0;i<arrayBars.length;i++){arrayBars[i].style.backgroundColor='#D56031';}var temp=Array.from({length:arraySize},function(){return Math.floor(Math.random()*400);});setArray(temp);};var mergeSort_animation=function mergeSort_animation(){// setCurrentSort('merge')\nvar animations=mergeSort_util(array);var _loop=function _loop(i){var arrayBars=document.getElementsByClassName(\"array-bar\");var isColorChange=i%3!==2;// comparison\nif(isColorChange){var _animations$i=_slicedToArray(animations[i],2),barOneIndex=_animations$i[0],barTwoIndex=_animations$i[1];var barOneStyle=arrayBars[barOneIndex].style;var barTwoStyle=arrayBars[barTwoIndex].style;var color=i%3===0?PRIMARY_COLOR:SECONDARY_COLOR;// showing comparison\ntimer=setTimeout(function(){barOneStyle.backgroundColor=\"\".concat(color);barTwoStyle.backgroundColor=\"\".concat(color);},i*animationSpeed);}else{// for swapping\ntimer=setTimeout(function(){var _animations$i2=_slicedToArray(animations[i],2),barOneIdx=_animations$i2[0],newHeight=_animations$i2[1];var barOneStyle=arrayBars[barOneIdx].style;barOneStyle.height=\"\".concat(newHeight,\"px\");},i*animationSpeed);}};for(var i=0;i<animations.length;i++){_loop(i);}};var sort_animation=function sort_animation(animations){setTimeout(function(){console.log(\"wait\");},500);var arrayBars=document.getElementsByClassName('array-bar');var _loop2=function _loop2(){var _animations$i3=_slicedToArray(animations[i],2),barOneIndex=_animations$i3[0],barTwoIndex=_animations$i3[1];var barOneStyle=arrayBars[barOneIndex].style;var barTwoStyle=arrayBars[barTwoIndex].style;var color=i%2===0?PRIMARY_COLOR:SECONDARY_COLOR;var swap=i%2;timer=setTimeout(function(){var barOneHeight=barOneStyle.height;var barTwoHeight=barTwoStyle.height;if(swap){barOneStyle.height=barTwoHeight;barTwoStyle.height=barOneHeight;}barOneStyle.backgroundColor=\"\".concat(color);barTwoStyle.backgroundColor=\"\".concat(color);},i*animationSpeed);};for(var i=0;i<animations.length;i++){_loop2();}};var bubbleSort_animation=function bubbleSort_animation(){var animations=bubbleSort_util(array);sort_animation(animations);};var quickSort_animation=function quickSort_animation(){var animations=quickSort_util(array);sort_animation(animations);// setCurrentSort('quick')\n};var insertionSort_animation=function insertionSort_animation(){var animations=insertionSort_util(array);sort_animation(animations);// setCurrentSort('insertion')\n};return/*#__PURE__*/React.createElement(motion.div,{className:\"sorting\",variants:variants,initial:\"hidden\",animate:\"visible\",exit:\"exit\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sorting__navbar\"},/*#__PURE__*/React.createElement(\"div\",{className:\"util__buttons\"},/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return resetArray(arraySize);}},\"Reset \"),/*#__PURE__*/React.createElement(\"button\",null,\"Start Timer\")),/*#__PURE__*/React.createElement(\"div\",{className:\"sorting-types__buttons\"},/*#__PURE__*/React.createElement(\"button\",{className:currentSort==='bubble'?'sorting__button-active':null,onClick:function onClick(){bubbleSort_animation();}},\"Bubble Sort\"),/*#__PURE__*/React.createElement(\"button\",{className:currentSort==='merge'?'sorting__button-active':null,onClick:function onClick(){return mergeSort_animation();}},\"Merge Sort\"),/*#__PURE__*/React.createElement(\"button\",{className:currentSort==='quick'?'sorting__button-active':null,onClick:function onClick(){return quickSort_animation();}},\"Quick Sort\"),/*#__PURE__*/React.createElement(\"button\",{className:currentSort==='insertion'?'sorting__button-active':null,onClick:function onClick(){return insertionSort_animation();}},\"Insertion Sort\")),/*#__PURE__*/React.createElement(\"input\",{type:\"range\",min:\"30\",max:maxSize,step:\"1\",value:arraySize,onChange:function onChange(e){setArraySize(e.target.value);},className:\"arraySize-slider\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"sorting__container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sorting__array\"},array&&array.map(function(value,idx){return/*#__PURE__*/React.createElement(\"div\",{className:\"array-bar\",key:idx,style:{height:\"\".concat(value,\"px\")}});}))));};export default Sorting;","map":{"version":3,"sources":["/Users/uchennaibe/Desktop/algorithm-visualizer/src/sorting/Sorting.js"],"names":["React","useState","useEffect","motion","mergeSort_util","bubbleSort_util","quickSort_util","insertionSort_util","useWindowSize","toast","variants","PRIMARY_COLOR","SECONDARY_COLOR","configure","Sorting","array","setArray","arraySize","setArraySize","maxSize","setMaxSize","notified","setNotified","currentSort","animationSpeed","timer","window","innerWidth","warn","autoClose","resetArray","width","clearTimeout","arrayBars","document","getElementsByClassName","i","length","style","backgroundColor","temp","Array","from","Math","floor","random","mergeSort_animation","animations","isColorChange","barOneIndex","barTwoIndex","barOneStyle","barTwoStyle","color","setTimeout","barOneIdx","newHeight","height","sort_animation","console","log","swap","barOneHeight","barTwoHeight","bubbleSort_animation","quickSort_animation","insertionSort_animation","e","target","value","map","idx"],"mappings":"iIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,MAAT,KAAuB,eAAvB,CACA,MAAO,eAAP,CACA,OAASC,cAAT,KAA+B,4BAA/B,CACA,OAASC,eAAT,KAAgC,6BAAhC,CACA,OAASC,cAAT,KAA+B,2BAA/B,CACA,OAASC,kBAAT,KAAmC,+BAAnC,CACA,MAAOC,CAAAA,aAAP,KAA0B,uBAA1B,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,QAAT,KAAyB,2BAAzB,CACA;AACA;AAGA;AACA,GAAMC,CAAAA,aAAa,CAAG,QAAtB,CAEA;AACA,GAAMC,CAAAA,eAAe,CAAG,OAAxB,CAIAH,KAAK,CAACI,SAAN,GACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,eACQb,QAAQ,CAAC,EAAD,CADhB,wCACXc,KADW,eACJC,QADI,8BAEgBf,QAAQ,CAAC,EAAD,CAFxB,yCAEXgB,SAFW,eAEAC,YAFA,eAGlB;AAHkB,eAIYjB,QAAQ,CAAC,IAAD,CAJpB,yCAIXkB,OAJW,eAIFC,UAJE,8BAKcnB,QAAQ,CAAC,KAAD,CALtB,yCAKXoB,QALW,eAKDC,WALC,8BAMIrB,QAAQ,CAAC,IAAD,CANZ,0CAMXsB,WANW,gCAOOtB,QAAQ,CAAC,GAAD,CAPf,2CAOXuB,cAPW,gBAQlB,GAAIC,CAAAA,KAAJ,CAEAvB,SAAS,CAAC,UAAM,CACZ,GAAIwB,MAAM,CAACC,UAAP,CAAoB,GAApB,EAA2B,CAACN,QAAhC,CAA0C,CACtCZ,KAAK,CAACmB,IAAN,CAAW,4GAAX,CACI,CAAEC,SAAS,CAAE,KAAb,CADJ,EAEAP,WAAW,CAAC,IAAD,CAAX,CACH,CACDQ,UAAU,CAACb,SAAD,CAAV,CACH,CAPQ,CAON,CAACA,SAAD,CAAYE,OAAZ,CAAqBE,QAArB,CAPM,CAAT,CAVkB,mBAkBFb,aAAa,EAlBX,kDAkBXuB,KAlBW,oBAmBlB,GAAIA,KAAK,CAAG,GAAR,EAAeZ,OAAO,GAAK,EAA/B,CAAmC,CAC/BD,YAAY,CAAC,EAAD,CAAZ,CACAE,UAAU,CAAC,EAAD,CAAV,CACH,CAHD,IAIK,IAAIW,KAAK,EAAI,GAAT,EAAgBA,KAAK,EAAI,IAAzB,EAAiCZ,OAAO,GAAK,EAAjD,CAAqD,CACtDD,YAAY,CAAC,EAAD,CAAZ,CACAE,UAAU,CAAC,EAAD,CAAV,CAEH,CAJI,IAKA,IAAIW,KAAK,CAAG,IAAR,EAAgBZ,OAAO,GAAK,EAAhC,CAAoC,CACrCD,YAAY,CAAC,EAAD,CAAZ,CACAE,UAAU,CAAC,EAAD,CAAV,CACH,CAGD,GAAMU,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAb,SAAS,CAAI,CAC5B;AACA,MAAOQ,KAAK,EAAZ,CAAgB,CACZC,MAAM,CAACM,YAAP,CAAoBP,KAApB,EAA4B;AAC/B,CACDO,YAAY,CAACP,KAAD,CAAZ,CACA,GAAMQ,CAAAA,SAAS,CAAGC,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAAlB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,SAAS,CAACI,MAA9B,CAAsCD,CAAC,EAAvC,EACIH,SAAS,CAACG,CAAD,CAAT,CAAaE,KAAb,CAAmBC,eAAnB,CAAqC,SAArC,CADJ,CAEA,GAAMC,CAAAA,IAAI,CAAGC,KAAK,CAACC,IAAN,CAAW,CAAEL,MAAM,CAAEpB,SAAV,CAAX,CAAkC,iBAAM0B,CAAAA,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,GAA3B,CAAN,EAAlC,CAAb,CACA7B,QAAQ,CAACwB,IAAD,CAAR,CACH,CAXD,CAcA,GAAMM,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAC9B;AACA,GAAMC,CAAAA,UAAU,CAAG3C,cAAc,CAACW,KAAD,CAAjC,CAF8B,yBAIrBqB,CAJqB,EAK1B,GAAMH,CAAAA,SAAS,CAAGC,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAAlB,CACA,GAAMa,CAAAA,aAAa,CAAGZ,CAAC,CAAG,CAAJ,GAAU,CAAhC,CAAkC;AAClC,GAAIY,aAAJ,CAAmB,kCACoBD,UAAU,CAACX,CAAD,CAD9B,IACRa,WADQ,kBACKC,WADL,kBAEf,GAAMC,CAAAA,WAAW,CAAGlB,SAAS,CAACgB,WAAD,CAAT,CAAuBX,KAA3C,CACA,GAAMc,CAAAA,WAAW,CAAGnB,SAAS,CAACiB,WAAD,CAAT,CAAuBZ,KAA3C,CACA,GAAMe,CAAAA,KAAK,CAAGjB,CAAC,CAAG,CAAJ,GAAU,CAAV,CAAczB,aAAd,CAA8BC,eAA5C,CAEA;AACAa,KAAK,CAAG6B,UAAU,CAAC,UAAM,CACrBH,WAAW,CAACZ,eAAZ,WAAiCc,KAAjC,EACAD,WAAW,CAACb,eAAZ,WAAiCc,KAAjC,EACH,CAHiB,CAGfjB,CAAC,CAAGZ,cAHW,CAAlB,CAIH,CAXD,IAWO,CACH;AACAC,KAAK,CAAG6B,UAAU,CAAC,UAAM,mCACQP,UAAU,CAACX,CAAD,CADlB,IAChBmB,SADgB,mBACLC,SADK,mBAErB,GAAIL,CAAAA,WAAW,CAAGlB,SAAS,CAACsB,SAAD,CAAT,CAAqBjB,KAAvC,CACAa,WAAW,CAACM,MAAZ,WAAwBD,SAAxB,OACH,CAJiB,CAIfpB,CAAC,CAAGZ,cAJW,CAAlB,CAKH,CAzByB,EAI9B,IAAK,GAAIY,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGW,UAAU,CAACV,MAA/B,CAAuCD,CAAC,EAAxC,CAA4C,OAAnCA,CAAmC,EAuB3C,CACJ,CA5BD,CA6BA,GAAMsB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACX,UAAD,CAAgB,CACnCO,UAAU,CAAC,UAAM,CACbK,OAAO,CAACC,GAAR,CAAY,MAAZ,EACH,CAFS,CAEP,GAFO,CAAV,CAGA,GAAM3B,CAAAA,SAAS,CAAGC,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAAlB,CAJmC,+DAMIY,UAAU,CAACX,CAAD,CANd,IAMxBa,WANwB,mBAMXC,WANW,mBAO/B,GAAMC,CAAAA,WAAW,CAAGlB,SAAS,CAACgB,WAAD,CAAT,CAAuBX,KAA3C,CACA,GAAMc,CAAAA,WAAW,CAAGnB,SAAS,CAACiB,WAAD,CAAT,CAAuBZ,KAA3C,CACA,GAAMe,CAAAA,KAAK,CAAGjB,CAAC,CAAG,CAAJ,GAAU,CAAV,CAAczB,aAAd,CAA8BC,eAA5C,CACA,GAAMiD,CAAAA,IAAI,CAAGzB,CAAC,CAAG,CAAjB,CACAX,KAAK,CAAG6B,UAAU,CAAC,UAAM,CACrB,GAAMQ,CAAAA,YAAY,CAAGX,WAAW,CAACM,MAAjC,CACA,GAAMM,CAAAA,YAAY,CAAGX,WAAW,CAACK,MAAjC,CACA,GAAII,IAAJ,CAAU,CACNV,WAAW,CAACM,MAAZ,CAAqBM,YAArB,CACAX,WAAW,CAACK,MAAZ,CAAqBK,YAArB,CACH,CACDX,WAAW,CAACZ,eAAZ,WAAiCc,KAAjC,EACAD,WAAW,CAACb,eAAZ,WAAiCc,KAAjC,EAGH,CAXiB,CAWfjB,CAAC,CAAGZ,cAXW,CAAlB,CAX+B,EAKnC,IAAK,GAAIY,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGW,UAAU,CAACV,MAA/B,CAAuCD,CAAC,EAAxC,CAA4C,UAkB3C,CAGJ,CA1BD,CA2BA,GAAM4B,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CAC/B,GAAMjB,CAAAA,UAAU,CAAG1C,eAAe,CAACU,KAAD,CAAlC,CACA2C,cAAc,CAACX,UAAD,CAAd,CACH,CAHD,CAIA,GAAMkB,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAC9B,GAAMlB,CAAAA,UAAU,CAAGzC,cAAc,CAACS,KAAD,CAAjC,CACA2C,cAAc,CAACX,UAAD,CAAd,CACA;AAGH,CAND,CAOA,GAAMmB,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,EAAM,CAElC,GAAMnB,CAAAA,UAAU,CAAGxC,kBAAkB,CAACQ,KAAD,CAArC,CACA2C,cAAc,CAACX,UAAD,CAAd,CACA;AACH,CALD,CAOA,mBACI,oBAAC,MAAD,CAAQ,GAAR,EAAY,SAAS,CAAC,SAAtB,CACI,QAAQ,CAAErC,QADd,CAEI,OAAO,CAAC,QAFZ,CAGI,OAAO,CAAC,SAHZ,CAII,IAAI,CAAC,MAJT,eAMI,2BAAK,SAAS,CAAC,iBAAf,eACI,2BAAK,SAAS,CAAC,eAAf,eACI,8BAAQ,OAAO,CAAE,yBAAMoB,CAAAA,UAAU,CAACb,SAAD,CAAhB,EAAjB,WADJ,cAEI,gDAFJ,CADJ,cAKI,2BAAK,SAAS,CAAC,wBAAf,eACI,8BAAQ,SAAS,CAAEM,WAAW,GAAK,QAAhB,CAA2B,wBAA3B,CAAsD,IAAzE,CAA+E,OAAO,CAAE,kBAAM,CAC1FyC,oBAAoB,GACvB,CAFD,gBADJ,cAMI,8BAAQ,SAAS,CAAEzC,WAAW,GAAK,OAAhB,CAA0B,wBAA1B,CAAqD,IAAxE,CAA8E,OAAO,CAAE,yBAAMuB,CAAAA,mBAAmB,EAAzB,EAAvF,eANJ,cAOI,8BAAQ,SAAS,CAAEvB,WAAW,GAAK,OAAhB,CAA0B,wBAA1B,CAAqD,IAAxE,CAA8E,OAAO,CAAE,yBAAM0C,CAAAA,mBAAmB,EAAzB,EAAvF,eAPJ,cAQI,8BAAQ,SAAS,CAAE1C,WAAW,GAAK,WAAhB,CAA8B,wBAA9B,CAAyD,IAA5E,CAAkF,OAAO,CAAE,yBAAM2C,CAAAA,uBAAuB,EAA7B,EAA3F,mBARJ,CALJ,cAeI,6BAAO,IAAI,CAAC,OAAZ,CAAoB,GAAG,CAAC,IAAxB,CAA6B,GAAG,CAAE/C,OAAlC,CAA2C,IAAI,CAAC,GAAhD,CACI,KAAK,CAAEF,SADX,CAEI,QAAQ,CAAE,kBAACkD,CAAD,CAAO,CACbjD,YAAY,CAACiD,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ,CACH,CAJL,CAKI,SAAS,CAAC,kBALd,EAfJ,CANJ,cA8BI,2BAAK,SAAS,CAAC,oBAAf,eACI,2BAAK,SAAS,CAAC,gBAAf,EACKtD,KAAK,EAAIA,KAAK,CAACuD,GAAN,CAAU,SAACD,KAAD,CAAQE,GAAR,qBAChB,2BAAK,SAAS,CAAC,WAAf,CAA2B,GAAG,CAAEA,GAAhC,CACI,KAAK,CAAE,CAAEd,MAAM,WAAKY,KAAL,MAAR,CADX,EADgB,EAAV,CADd,CADJ,CA9BJ,CADJ,CA4CH,CAtKD,CAwKA,cAAevD,CAAAA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion'\nimport './sorting.css'\nimport { mergeSort_util } from './sorting-algos/merge_sort';\nimport { bubbleSort_util } from './sorting-algos/bubble_sort';\nimport { quickSort_util } from './sorting-algos/quickSort';\nimport { insertionSort_util } from './sorting-algos/insertionSort';\nimport useWindowSize from '../hooks/windowResize';\nimport { toast } from 'react-toastify'\nimport { variants } from '../framer motion/variants';\n// Change this value for the speed of the animations.\n// const ANIMATION_SPEED_MS = 100;\n\n\n// This is the main color of the array bars.\nconst PRIMARY_COLOR = 'yellow';\n\n// This is the color of array bars that are being compared throughout the animations.\nconst SECONDARY_COLOR = 'green';\n\n\n\ntoast.configure()\nconst Sorting = () => {\n    const [array, setArray] = useState('')\n    const [arraySize, setArraySize] = useState(30)\n    //const [active, setActive] = useState('');\n    const [maxSize, setMaxSize] = useState(null)\n    const [notified, setNotified] = useState(false)\n    const [currentSort] = useState(null)\n    const [animationSpeed] = useState(100)\n    var timer;\n\n    useEffect(() => {\n        if (window.innerWidth < 500 && !notified) {\n            toast.warn('Seems like you are using this app in mobile :( Open this app in large screen to get the best experience :)',\n                { autoClose: false })\n            setNotified(true)\n        }\n        resetArray(arraySize)\n    }, [arraySize, maxSize, notified])\n    const [width] = useWindowSize()\n    if (width < 500 && maxSize !== 35) {\n        setArraySize(20)\n        setMaxSize(35)\n    }\n    else if (width >= 500 && width <= 1024 && maxSize !== 50) {\n        setArraySize(30)\n        setMaxSize(50)\n\n    }\n    else if (width > 1024 && maxSize !== 70) {\n        setArraySize(50)\n        setMaxSize(70)\n    }\n\n\n    const resetArray = arraySize => {\n        //?\n        while (timer--) {\n            window.clearTimeout(timer); // will do nothing if no timeout with id is present\n        }\n        clearTimeout(timer)\n        const arrayBars = document.getElementsByClassName('array-bar')\n        for (let i = 0; i < arrayBars.length; i++)\n            arrayBars[i].style.backgroundColor = '#D56031'\n        const temp = Array.from({ length: arraySize }, () => Math.floor(Math.random() * 400));\n        setArray(temp)\n    }\n\n\n    const mergeSort_animation = () => {\n        // setCurrentSort('merge')\n        const animations = mergeSort_util(array)\n\n        for (let i = 0; i < animations.length; i++) {\n            const arrayBars = document.getElementsByClassName(\"array-bar\")\n            const isColorChange = i % 3 !== 2 // comparison\n            if (isColorChange) {\n                const [barOneIndex, barTwoIndex] = animations[i]\n                const barOneStyle = arrayBars[barOneIndex].style;\n                const barTwoStyle = arrayBars[barTwoIndex].style;\n                const color = i % 3 === 0 ? PRIMARY_COLOR : SECONDARY_COLOR\n\n                // showing comparison\n                timer = setTimeout(() => {\n                    barOneStyle.backgroundColor = `${color}`\n                    barTwoStyle.backgroundColor = `${color}`\n                }, i * animationSpeed)\n            } else {\n                // for swapping\n                timer = setTimeout(() => {\n                    let [barOneIdx, newHeight] = animations[i]\n                    let barOneStyle = arrayBars[barOneIdx].style\n                    barOneStyle.height = `${newHeight}px`\n                }, i * animationSpeed)\n            }\n\n        }\n    }\n    const sort_animation = (animations) => {\n        setTimeout(() => {\n            console.log(\"wait\");\n        }, 500)\n        const arrayBars = document.getElementsByClassName('array-bar')\n        for (var i = 0; i < animations.length; i++) {\n            const [barOneIndex, barTwoIndex] = animations[i]\n            const barOneStyle = arrayBars[barOneIndex].style;\n            const barTwoStyle = arrayBars[barTwoIndex].style;\n            const color = i % 2 === 0 ? PRIMARY_COLOR : SECONDARY_COLOR\n            const swap = i % 2\n            timer = setTimeout(() => {\n                const barOneHeight = barOneStyle.height\n                const barTwoHeight = barTwoStyle.height\n                if (swap) {\n                    barOneStyle.height = barTwoHeight\n                    barTwoStyle.height = barOneHeight\n                }\n                barOneStyle.backgroundColor = `${color}`\n                barTwoStyle.backgroundColor = `${color}`\n\n\n            }, i * animationSpeed)\n        }\n\n\n    }\n    const bubbleSort_animation = () => {\n        const animations = bubbleSort_util(array)\n        sort_animation(animations);\n    }\n    const quickSort_animation = () => {\n        const animations = quickSort_util(array)\n        sort_animation(animations);\n        // setCurrentSort('quick')\n\n\n    }\n    const insertionSort_animation = () => {\n\n        const animations = insertionSort_util(array);\n        sort_animation(animations);\n        // setCurrentSort('insertion')\n    }\n\n    return (\n        <motion.div className=\"sorting\"\n            variants={variants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n        >\n            <div className=\"sorting__navbar\">\n                <div className=\"util__buttons\">\n                    <button onClick={() => resetArray(arraySize)}>Reset </button>\n                    <button>Start Timer</button>\n                </div>\n                <div className=\"sorting-types__buttons\">\n                    <button className={currentSort === 'bubble' ? 'sorting__button-active' : null} onClick={() => {\n                        bubbleSort_animation()\n                    }\n                    }\n                    >Bubble Sort</button>\n                    <button className={currentSort === 'merge' ? 'sorting__button-active' : null} onClick={() => mergeSort_animation()}>Merge Sort</button>\n                    <button className={currentSort === 'quick' ? 'sorting__button-active' : null} onClick={() => quickSort_animation()}>Quick Sort</button>\n                    <button className={currentSort === 'insertion' ? 'sorting__button-active' : null} onClick={() => insertionSort_animation()}>Insertion Sort</button>\n                </div>\n                <input type=\"range\" min=\"30\" max={maxSize} step=\"1\"\n                    value={arraySize}\n                    onChange={(e) => {\n                        setArraySize(e.target.value)\n                    }}\n                    className=\"arraySize-slider\" />\n\n            </div>\n            {/* //sorting------------ */}\n            <div className='sorting__container'>\n                <div className=\"sorting__array\">\n                    {array && array.map((value, idx) =>\n                        <div className=\"array-bar\" key={idx}\n                            style={{ height: `${value}px` }}  >\n\n                        </div>\n                    )}\n                </div>\n            </div>\n\n        </motion.div>\n    );\n};\n\nexport default Sorting; "]},"metadata":{},"sourceType":"module"}